#include<bits/stdc++.h>
using namespace std;
bool is_safe(vector<vector<int>>& graph , vector<int>& color , int c , int v , int V){
    for(int i = 0 ; i < V ; i++){
        if(graph[v][i] && color[i] == c){
            return false;
        }
    }
    return true;
}
bool g_color(vector<vector<int>>& graph , vector<int>& color , int m , int v , int V){
    if(v == V){
        return true;
    }
    for(int c = 1 ; c <= m ; c++){
        if(is_safe(graph , color , c , v , V)){
            color[v] = c;
        if(g_color(graph , color , m , v + 1 , V )){
            return true;
        }
        color[v] = 0;
    }
    }
    return false;
}
int main(){
    int V;
    cin >> V;
    vector<vector<int>> graph(V , vector<int>(V));
    for(int i = 0 ; i < V ; i++ ){
        for (int j = 0 ; j < V ; j++ ){
            cin >> graph[i][j];
        }
    }
    int m;
    cin >> m;
    vector<int>color(V , 0);
    if(g_color(graph , color , m , 0 , V)){
        for(int i = 0 ; i < V ; i++){
            cout<<color[i]<<" ";
        }
        
    }else{
        cout<<"No solution";
    }
}


// 4
// 0 1 1 1
// 1 0 1 0
// 1 1 0 1
// 1 0 1 0
// 3
